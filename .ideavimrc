set showmode
set showcmd
set smartcase
set incsearch
set nohlsearch
set visualbell
set scrolloff=5
set relativenumber
set number

" Use system clipboard
set clipboard=unnamedplus
set clipboard^=ideaput


let mapleader = " "

"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
set nerdtree
set easymotion
set notimeout
set ideajoin

"" Key mappings
"" ========================================================
" sethandler <C-C> n-v:ide i:vim
inoremap jj <Esc>

" Jump around with easymotion
nmap s         <Plug>(easymotion-s2)
xmap s         <Plug>(easymotion-s2)
omap z         <Plug>(easymotion-s2)

" Move half a page and center
" nnoremap } }zz
" nnoremap { {zz
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" have x (removes single character) not go into the default registry
nnoremap x "_x
" Make X an operator that removes without placing text in the default registry
nmap X "_d
nmap XX "_dd
vmap X "_d
vmap x "_d

" don't yank to default register when changing something
nnoremap c "xc
xnoremap c "xc
nnoremap ci "xci
vnoremap ci "xci
xnoremap ci "xci
nnoremap ca "xca
vnoremap ca "xca
xnoremap ca "xca

"Change inside quotes
nnoremap ciq ci"
nnoremap viq vi"
nnoremap diq di"

" snake_case ops
nnoremap ,w /_<CR>l
nnoremap ,b ?_<CR>nl
nnoremap ,cw T_ct_
nnoremap ,dw T_"xdf_
nnoremap ,vw T_vt_
nnoremap ,yw T_yt_

" Delete word forward
inoremap <C-e> <C-o>"xde

" Tab navigation
nnoremap <A-n> :tabnext<CR>
nnoremap <A-p> :tabprev<CR>

" Pane navigation

" nnoremap <C-h> <C-w>h
" nnoremap <C-l> <C-w>l
" nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>w

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" ide toggle
sethandler <C-p> a:ide
sethandler <C-s> a:ide
sethandler <C-e> n-v:ide i:vim
sethandler <C-v> i:ide n-v:vim

"" Leader commands
"" ========================================================

" Spacers
map <leader>kk <Esc>O<Esc>j
map <leader>jj <Esc>o<Esc>k

" Code
map <leader>cg <Action>(Generate)
map <leader>cd <Action>(Unwrap)
map <leader>ca <Action>(ShowIntentionActions)
map <leader>cs <Action>(SurroundWith)
map <leader>ct <Action>(InsertLiveTemplate)

" Open NERDTree (use q to exit)
map <leader>x :NERDTreeToggle<CR>

map <leader>v <Action>(JumpToLastWindow)
map <leader>n <Action>(ShowNavBar)

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)
" map <leader>t <C-W>w

" Display options
map <leader>dz <action>(ToggleZenMode)

" Actions (same as neovim kickstart)
nnoremap ]d :action GotoNextError<CR>
nnoremap [d :action GotoPreviousError<CR>
map <leader>h <Action>(QuickJavaDoc)

nmap = <Action>(ReformatCode)
nmap + <Action>(OptimizeImports)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fc <action>(FindInPath)
map <leader>fl <action>(RecentLocations)
map <leader>fa <action>(GotoAction)
map <leader>fu <Action>(FindUsages)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)
map <leader>ys <Action>(SurroundWith)
map <leader>lt <Action>(InsertLiveTemplate)
map <leader>rp <Action>(Replace)

" Go to code
nmap gd <Action>(GotoDeclaration)
nmap <leader>D <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gu <Action>(ShowUsages)
nmap gt <Action>(GotoTest)
nmap gb <Action>(Back)
nmap gf <Action>(Forward)

" Breakpoint
map <leader>bb <action>(ToggleLineBreakpoint)

" Bookmarks
map <leader>bm <Action>(ToggleBookmarkWithMnemonic)
nmap ]b <Action>(GotoNextBookmark)
nmap [b <Action>(GotoPreviousBookmark)


" run stuff
map <leader>1 <Action>(Run)
map <leader>! <Action>(ChooseRunConfiguration)
map <leader>2 <Action>(Debug)
map <leader>@ <Action>(ChooseDebugConfiguration)
map <leader>0 <Action>(Stop)
